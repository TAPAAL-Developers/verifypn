VerifyPN with multi-core support
================================
This tool extends VerifyPN (https://code.launchpad.net/verifypn) to generate 
a model specific successor generator together with the language-independent 
model checker LTSmin that offers parallel reachablity analysis algorithms.

Building this tool
------------------
This tool is build using a simple makefile, depending on you platform and
configuration of it, you might need to modify the makefile in order link
correctly against following dependencies: 

  * GNU Bison (>= 2.4)
  * flex (>= 2.5)
  * lp_solve (>= 5.5)
  * LTSmin (>= 2.1

For simplicity, compiled output form GNU Bison, flex and binaries of lpsolve
are included in the source tree.

To cross compile for Windows on linux install `g++-mingw-w64` and run
`make -f makefile.win32` for 32 bit version, and `make -f makefile.win64` for
64 bit version.

**Warning** both `verifypn-win32` and `verifypn-win64` are accompanied by a dll
called `lpsolve55.dll`, however, this is **not** the same dll for both 32 and 64
bit versions. Unfortunately, we cannot rename the dll either, so either we need
to build with MSVC or accept this pain, and distribute Windows 32 and 64 bit
versions in different folders, and watch out of this during deployment.

To cross compile for 32 bit linux you need to run install `gcc-multilib`,
`g++-multilib` and probably a few others.

To build on OS X run `make -f makefile.osx32` or `make -f makefile.osx64`,
as cross compilers for OS X are not readily available (e.g. in package manager)
cross compilation for OS X is not supported.

This tool requires LTSmin to use the multi-core functionality. Precompiled LTSmin
binaries have been installed in the 'lib' directory for both Linux and Mac OS.
If problems occur when executing these binaries, please refer to the 
LTSmin documentation (http://fmt.cs.utwente.nl/tools/ltsmin/), and follow the 
installation guide for re-compilation and installation of LTSmin.

How to use the tool
-------------------
Petri net models can be found at (http://mcc.lip6.fr/cft.php).
The following is examples of how to use the tool:

#StateSpace exploration using 1 core
./verifypn-linux64 -o mc -c 1 -e -d HouseConstruction-PT-005/model.pnml

#ReachabilityCardinality using 8 cores
./verifypn-linux64 -o mc -c 8 -d HouseConstruction-PT-005/model.pnml HouseConstruction-PT-005/ReachabilityCardinality.xml

For other use flags, please see the --help menu.

License
-------
This tool is available under the terms of the GNU GPL versoin 3 or
(at your option) any later version.
If this license doesn't suit you're welcome to contact us, and purpose an
alternative license.

Authors
-------
  * Jonas Finnemann Jensen
  * Thomas Søndersø Nielsen
  * Lars Kærlund Østergaard
  * Jiri Srba
  * Jakob Dyhr
  * Mads Johannsen
  * Isabella Kaufmann
  * Søren Moss Nielsen
